[{"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\index.js":"1","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\reportWebVitals.js":"2","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\App.js":"3","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\components\\Shipping\\Shipping.js":"4","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\components\\product_detail\\Product.js":"5","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\components\\search\\Search.js":"6","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\api\\listaProductos.js":"7","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\api\\updateProducts.js":"8"},{"size":534,"mtime":1656283771524,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1655696401000,"results":"11","hashOfConfig":"10"},{"size":6371,"mtime":1656648152162,"results":"12","hashOfConfig":"10"},{"size":1187,"mtime":1656319488130,"results":"13","hashOfConfig":"14"},{"size":12307,"mtime":1656565261446,"results":"15","hashOfConfig":"10"},{"size":2724,"mtime":1656485051909,"results":"16","hashOfConfig":"14"},{"size":1165,"mtime":1656310093216,"results":"17","hashOfConfig":"10"},{"size":2167,"mtime":1656319493643,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"t2pnmx",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3c2d3m",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\index.js",[],[],[],"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\reportWebVitals.js",[],[],"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\App.js",["45","46","47"],[],"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\components\\Shipping\\Shipping.js",[],[],"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\components\\product_detail\\Product.js",["48","49"],[],"import React,{useState} from 'react'\r\nimport {changeStatusProduct, changePriceProduct, changeShippingProduct} from \"../../api/updateProducts\";\r\n\r\nexport default function Product(props) {\r\n    const {key,productId, nombre, cod, stock, price, enabled, image, shipping} = props;\r\n    // console.log(storeId, accessToken);\r\n    const [colorStyle,setColorStyle]=useState(false);\r\n    // se usa para mostrar el icono y titulo de las opciones de cada producto\r\n    const [opciones,setopciones]=useState(false);\r\n    // ======================================================\r\n\r\n    // almacena el estado del chek para mostrar u ocultar los componentes de editar precio\r\n    const [estadoCheck, setCheck]=useState(enabled);\r\n    \r\n    async function changeCheck(){\r\n        const statusCheck = (!estadoCheck === true) ? true : false;\r\n        const result = await changeStatusProduct(statusCheck,productId);\r\n        if(result.updateCount===1){\r\n            setCheck(statusCheck);\r\n        }\r\n    }\r\n    // =============================================================\r\n\r\n    // Muestra Precios y Shipping\r\n    const [pPrice, setPPrice] = useState(true);\r\n    const [txtPrice, settxtPrice] = useState(false);\r\n\r\n    \r\n    const [pShipping, setShipping] = useState(true);\r\n    const [txtShipping, settxtShipping] = useState(false);\r\n\r\n    // Muestra los botones de accion\r\n    const [buttonE, setButtonE] = useState(true);\r\n    const [buttonA, setButtonA] = useState(false);\r\n\r\n    const [buttonES, setButtonES] = useState(true);\r\n    const [buttonAS, setButtonAS] = useState(false);\r\n\r\n    async function actions(action){\r\n        if(action === \"edit\"){\r\n            var sPrice = document.getElementById(`sPrice${productId}`).textContent;\r\n            document.getElementById(`txtPrice${productId}`).value = sPrice;\r\n            setButtonE(false);\r\n            setButtonA(true);\r\n            setPPrice(false);\r\n            settxtPrice(true);\r\n        }else{\r\n            var setChanges = true;\r\n            setColorStyle(false);\r\n            if(action === \"save\"){\r\n                var newPrice = document.getElementById(`txtPrice${productId}`).value;\r\n                // console.log(newPrice);\r\n                if(newPrice < 0 || isNaN(newPrice)|| newPrice===\"\"){\r\n                    setChanges = false;\r\n                    setColorStyle(true);\r\n                }else{\r\n                    const result= await changePriceProduct(newPrice, productId);\r\n                    if(result.updateCount===1){\r\n                        document.getElementById(`sPrice${productId}`).textContent = newPrice;\r\n                    }else{\r\n                        setChanges = false;\r\n                    }\r\n                }\r\n            }\r\n            if(setChanges){\r\n                setButtonE(true);\r\n                setButtonA(false);\r\n                setPPrice(true);\r\n                settxtPrice(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function actionsShipping(action){\r\n        if(action === \"edit\"){\r\n            var sShipping = document.getElementById(`sShipping${productId}`).textContent;\r\n            document.getElementById(`txtShipping${productId}`).value = sShipping;\r\n            setButtonES(false);\r\n            setButtonAS(true);\r\n            setShipping(false);\r\n            settxtShipping(true);\r\n        }else{\r\n            var setChanges = true;\r\n            setColorStyle(false);\r\n            if(action === \"save\"){\r\n                var newShipping = document.getElementById(`txtShipping${productId}`).value;\r\n                if(newShipping < 0 || isNaN(newShipping)|| newShipping===\"\"){\r\n                    setChanges = false;\r\n                    setColorStyle(true);\r\n                }else{\r\n                    const result= await changeShippingProduct(newShipping, productId);\r\n                    if(result.updateCount===1){\r\n                        document.getElementById(`sShipping${productId}`).textContent = newShipping;\r\n                    }else{\r\n                        setChanges = false;\r\n                    }\r\n                }\r\n            }\r\n            if(setChanges){\r\n                setButtonES(true);\r\n                setButtonAS(false);\r\n                setShipping(true);\r\n                settxtShipping(false);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div key={key} className=\"content-wrapper\">\r\n            <div className=\"pt-3\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card\" >\r\n                                <div className=\"row g-0\" style={{paddingTop:10,paddingBottom:10}}>\r\n                                    <div className='col-md-1' style={{alignSelf:\"center\", display:\"flex\", justifyContent:\"center\", alignItems:\"center\"}} >\r\n                                        <div className=\"form-check \" >\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\" style={{color:'GrayText'}}>\r\n                                        <img src={image===null || image===undefined || image===\"\" ? (\"http://bppl.kkp.go.id/uploads/publikasi/karya_tulis_ilmiah/default.jpg\"):(image)  } className=\"img-fluid rounded-start\" alt=\"Product Image\" width={\"100%\"}></img>\r\n                                    </div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <div className=\"card-body\" >\r\n                                            <div className='row'>\r\n                                                <div className='col-md-6'>\r\n                                                    <h5 className=\"card-title\">{nombre} <small className=\"text-muted\">{cod}</small></h5>\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-8'>\r\n                                                            <div className='input-group'style={{justifyContent:'space-evenly'}}>\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input success\" onClick={()=>changeCheck()} type=\"checkbox\" id={productId} checked={estadoCheck}></input>\r\n                                                                    <label className=\"form-check-label\" htmlFor={productId} style={{color:(estadoCheck) ? \"green\" : \"gray\"}}>{ estadoCheck?\"Activate\":\"Deactivate\" }</label>\r\n                                                                </div>\r\n                                                                <h6 style={{color:(stock > 0) ? \"black\" : \"red\"}}>{(stock > 0) ? `Available: ${stock}` : \"Unavailable\"}</h6>\r\n                                                            </div>  \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {\r\n                                                        opciones?(<div className='row'>\r\n                                                            <div className='col-md-12'>\r\n                                                                <a href='google.com'><i className=\"far fa-clone\"></i> <label>Opciones</label></a>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        ):(null)\r\n                                                    }\r\n                                                </div>\r\n                                                <div className='col-md-3 text-center'>\r\n                                                    <div className='row'>\r\n                                                        <div className='col-md-12' style={{paddingBottom:10}}>\r\n                                                            <h3 hidden={pPrice?(false):(true)}>$<small id={`sPrice${productId}`}>{price}</small></h3>\r\n                                                            <input type=\"number\" style={colorStyle?({borderWidth:1, borderColor:\"red\"}):({borderColor:\"gray\"})} className=\"form-control\" id={`txtPrice${productId}`} placeholder='New Price'  hidden={txtPrice?(false):(true)}></input>\r\n                                                        </div>\r\n                                                        <div className='col-md-12' style={{paddingBottom:10}}>\r\n                                                            <h3 hidden={pShipping?(false):(true)}>$<small id={`sShipping${productId}`}>{shipping}</small></h3>\r\n                                                            <input type=\"number\" style={colorStyle?({borderWidth:1, borderColor:\"red\"}):({borderColor:\"gray\"})} className=\"form-control\" id={`txtShipping${productId}`} placeholder='New Shipping'  hidden={txtShipping?(false):(true)}></input>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-md-3 text-center'>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-12\" style={{paddingBottom:10}}>\r\n                                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                                                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={()=>actions('edit')} hidden={buttonE?(false):(true)}><i class=\"fas fa-edit\"></i> Edit Price</button>\r\n                                                                <button type=\"button\" className=\"btn btn-outline-success\" onClick={()=>actions('save')} hidden={buttonA?(false):(true)}><i class=\"fas fa-save\"></i> Save</button>\r\n                                                                <button type=\"button\" className=\"btn btn-outline-danger\" onClick={()=>actions('cancel')} hidden={buttonA?(false):(true)}><i class=\"fas fa-times-circle\"></i> Cancel</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-md-12\" style={{paddingBottom:10}}>\r\n                                                            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                                                <button type=\"button\" className=\"btn btn-outline-dark\" onClick={()=>actionsShipping('edit')} hidden={buttonES?(false):(true)}><i class=\"fas fa-shipping-fast\"> </i>  Shipping</button>\r\n                                                                <button type=\"button\" className=\"btn btn-outline-success\" onClick={()=>actionsShipping('save')} hidden={buttonAS?(false):(true)}><i class=\"fas fa-save\"></i> Save</button>\r\n                                                                <button type=\"button\" className=\"btn btn-outline-danger\" onClick={()=>actionsShipping('cancel')} hidden={buttonAS?(false):(true)}><i class=\"fas fa-times-circle\"></i> Cancel</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    \r\n}\r\n","C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\components\\search\\Search.js",["50","51","52"],[],"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\api\\listaProductos.js",[],[],"C:\\Users\\Henry\\Downloads\\Products\\Products\\src\\api\\updateProducts.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":38,"column":9,"nodeType":"55","messageId":"56","endLine":38,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":89,"column":4,"nodeType":"59","endLine":89,"endColumn":6,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":99,"column":3,"nodeType":"59","endLine":99,"endColumn":16,"suggestions":"62"},{"ruleId":"53","severity":1,"message":"63","line":9,"column":21,"nodeType":"55","messageId":"56","endLine":9,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":122,"column":41,"nodeType":"66","endLine":122,"endColumn":258},{"ruleId":"53","severity":1,"message":"67","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"68","line":3,"column":9,"nodeType":"55","messageId":"56","endLine":3,"endColumn":19},{"ruleId":"53","severity":1,"message":"69","line":10,"column":14,"nodeType":"55","messageId":"56","endLine":10,"endColumn":28},"no-unused-vars","'handleToggle' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken' and 'storeId'. Either include them or remove the dependency array.","ArrayExpression",["70"],"React Hook useEffect has missing dependencies: 'accessToken', 'filterProducts', and 'storeId'. Either include them or remove the dependency array.",["71"],"'setopciones' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'getProduct' is defined but never used.","'filterProducts' is defined but never used.",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [accessToken, storeId]",{"range":"76","text":"77"},"Update the dependencies array to be: [accessToken, filterProducts, inputFilter, storeId]",{"range":"78","text":"79"},[2673,2675],"[accessToken, storeId]",[2851,2864],"[accessToken, filterProducts, inputFilter, storeId]"]